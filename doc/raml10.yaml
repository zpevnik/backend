#%RAML 1.0
title: "Skautský zpěvník"
version: "v0.2"
protocols:
- "HTTPS"
baseUri: "https://zpevnik.skauting.cz/api/"
types:
  ClientError:
    type: "object"
    properties:
      message:
        type: "string"
  RequestError:
    type: "object"
    properties:
      message:
        type: "string"
  ValidationError:
    type: "object"
    properties:
      message:
        type: "string"
      errors:
        type: "array"
        items:
          type: "object"
          properties:
            field:
              type: "string"
              required: false
            code:
              type: "string"
              required: false
            message:
              type: "string"
              required: false
  Redirect:
    type: "object"
    properties:
      link:
        type: "string"
  Author:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      created:
        type: "datetime"
        required: false
  Song:
    type: "object"
    properties:
      id:
        type: "string"
      title:
        type: "string"
      owner:
        type: "string"
      text:
        type: "string"
      description:
        type: "string"
      authors:
        type: "object"
        properties:
          music:
            type: "array"
            items:
              type: "Author"
          lyrics:
            type: "array"
            items:
              type: "Author"
        example:
          value: "{'music': [], 'lyrics': []}"
          strict: false
      interpreters:
        type: "array"
        items:
          type: "Author"
      owner_unit:
        type: "string"
      visibility:
        type: "string"
      edit_perm:
        type: "string"
      created:
        type: "datetime"
        required: false
  Songbook:
    type: "object"
    properties:
      id:
        type: "string"
      title:
        type: "string"
      songs:
        type: "object"
        example:
          value: "{'595007f100000000008c81b8': {\n  'id': '595007f100000000008c81b8',\n\
            \  'order': 1,\n  'options': {}\n}}"
          strict: false
      owner:
        type: "string"
      owner_unit:
        type: "string"
      visibility:
        type: "string"
      edit_perm:
        type: "string"
      created:
        type: "datetime"
        required: false
  User:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      active:
        type: "boolean"
      unit:
        type: "string"
      active_songbook:
        type: "Songbook"
      created:
        type: "datetime"
        required: false
      last_login:
        type: "datetime"
        required: false
      logout_link:
        type: "string"
  Interpreter:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      created:
        type: "datetime"
        required: false
  Response:
    type: "object"
    properties:
      message:
        type: "string"
  songs representation:
    type: "object"
    properties:
      title:
        type: "string"
      text:
        type: "string"
      description:
        type: "string"
      authors:
        type: "object"
        properties:
          music:
            type: "array"
            description: "Array of music authors"
            items:
              type: "Author"
          lyrics:
            type: "array"
            description: "Array of lyrics authors"
            items:
              type: "Author"
        example:
          value: "{'music': [], 'lyrics': []}"
          strict: false
      interpreters:
        type: "array"
        items:
          type: "Interpreter"
      visibility:
        type: "string"
        required: false
      edit_perm:
        type: "string"
        required: false
  authors representation:
    type: "object"
    properties:
      name:
        type: "string"
  songbooks representation:
    type: "object"
    properties:
      title:
        type: "string"
  songbook song representation:
    type: "object"
    properties:
      id:
        type: "string"
      order:
        type: "number"
        required: false
      options:
        type: "object"
        required: false
  interpreters representation:
    type: "object"
    properties:
      name:
        type: "string"
securitySchemes:
  skautIS Auth:
    type: "x-custom"
/songs:
  get:
    description: "Slouží k získání seznamu písní."
    queryParameters:
      query:
        type: "string"
        description: "Text použitý k vyhledávání mezi písněmi."
        required: false
      page:
        type: "integer"
        format: "int32"
        description: "Stránka výpisu."
        default: 0
        minimum: 0
        required: false
      per_page:
        type: "integer"
        format: "int32"
        description: "Upravuje počet písní na stránce."
        default: 30
        minimum: 1
        maximum: 200
        required: false
    responses:
      200:
        description: "Odpověď použitá v případě nalezení 0+ písní."
        headers:
          Link:
            type: "string"
            example: "</songs/?page=0&per_page=30>; rel=\"first\""
        body:
          application/json:
            type: "array"
            items:
              type: "Song"
      400:
        description: "Odpověď použitá v případě, že některý z parametrů obsahuje neplatná\
          \ data."
        body:
          application/json:
            type: "ClientError"
  post:
    description: "Slouží k vytváření nových písní."
    body:
      application/json:
        type: "songs representation"
    responses:
      201:
        description: "Odpověď použitá v případě úspěšného vytvoření písně."
        headers:
          Location:
            type: "string"
            example: "/songs/1/"
        body:
          application/json:
            type: "Redirect"
      400:
        body:
          application/json:
            type: "RequestError"
      422:
        description: "Odpověď použitá v případě, že při vytváření došlo k chybě."
        body:
          application/json:
            type: "ValidationError"
/songs/{song_id}:
  uriParameters:
    song_id:
      type: "string"
  get:
    description: "Slouží k získání detailu písně."
    headers:
      Accept:
        type: "string"
        description: "Je-li hlavička Accept explicitně nastavena na `application/pdf`,\
          \ vrátí json s endpointem na vygenerovaný soubor a obsahující log překladu.\
          \ V opačném případě je vrácen detail písně standardně v `json`u."
        default: "application/json"
        enum:
        - "application/json"
        - "application/pdf"
    responses:
      200:
        description: "Odpověď vrácená v případě nalezení písně."
        body:
          application/json:
            type: "Song"
          application/pdf:
            type: "object"
            description: "Odpověď v případě generovaného pdf"
            example:
              value: "{\"link\": \"/download/2b573863-71b1-4463-96a7-e7fae9ba3865.pdf\"\
                , \"log\": \"[1] WARNING: Unknown tag [X].\"}"
              strict: false
      404:
        description: "Odpověď použitá v případě, že píseň nebyla nalezena."
        body:
          application/json:
            type: "ClientError"
      500:
        description: "Odpověď v případě chyby kompilace zpěvníku na pdf."
        body:
          application/json:
            type: "ClientError"
  put:
    description: "Slouží k úpravě detailů písně."
    body:
      application/json:
        type: "songs representation"
    responses:
      200:
        description: "Odpověď vrácená v případě úspěšného uložení písně"
        body:
          application/json:
            type: "Song"
      400:
        body:
          application/json:
            type: "RequestError"
      404:
        description: "Odpověď použitá v případě, že píseň nebyla nalezena."
        body:
          application/json:
            type: "ClientError"
      422:
        description: "Odpověď použitá v případě, že při vytváření došlo k chybě."
        body:
          application/json:
            type: "ValidationError"
  delete:
    description: "Slouží ke smazání jedné konkrétní písně\nvčetně všech variant akordů\
      ."
    responses:
      204:
        description: "Použije se v případě, že došlo ke smazání."
      404:
        body:
          application/json:
            type: "ClientError"
/authors:
  get:
    description: "Slouží k získání seznamu autorů."
    responses:
      200:
        description: "Odpověď použitá v případě nalezení 0+ autorů."
        body:
          application/json:
            type: "array"
            items:
              type: "Author"
  post:
    description: "Slouží k vytváření autorů."
    body:
      application/json:
        type: "authors representation"
    responses:
      201:
        description: "Odpověď použitá v případě úspěšného vytvoření autora."
        headers:
          Location:
            type: "string"
            example: "/authors/1/"
        body:
          application/json:
            type: "Redirect"
      400:
        body:
          application/json:
            type: "RequestError"
      422:
        description: "Odpověď použitá v případě, že při vytváření došlo k chybě."
        body:
          application/json:
            type: "ValidationError"
/authors/{author_id}:
  uriParameters:
    author_id:
      type: "string"
  get:
    description: "Slouží k získání detailu autora."
    responses:
      200:
        description: "Odpověď vrácená v případě nalezení autora."
        body:
          application/json:
            type: "Author"
      404:
        description: "Odpověď použitá v případě, že autor nebyl nalezen."
        body:
          application/json:
            type: "ClientError"
  put:
    description: "Slouží k úpravě informací o autorovi."
    body:
      application/json:
        type: "authors representation"
    responses:
      200:
        body:
          application/json:
            type: "Author"
      400:
        body:
          application/json:
            type: "RequestError"
      404:
        description: "V případě nenalezeného autora."
        body:
          application/json:
            type: "ClientError"
      422:
        description: "Odpověď použitá v případě, že při vytváření došlo k chybě."
        body:
          application/json:
            type: "ValidationError"
  delete:
    description: "Slouží ke smazání autora."
    responses:
      204:
        description: "Použije se v případě, že došlo ke smazání."
      404:
        body:
          application/json:
            type: "ClientError"
/interpreters:
  get:
    description: "Slouží k získání seznamu interpretů."
    responses:
      200:
        description: "Odpověď použitá v případě nalezení 0+ interpretů."
        body:
          application/json:
            type: "array"
            items:
              type: "Interpreter"
  post:
    description: "Slouží k vytváření interpretů."
    body:
      application/json:
        type: "interpreters representation"
    responses:
      201:
        description: "Odpověď použitá v případě úspěšného vytvoření interpreta."
        headers:
          Location:
            type: "string"
            example: "/interpreters/1/"
        body:
          application/json:
            type: "Redirect"
      400:
        body:
          application/json:
            type: "RequestError"
      422:
        description: "Odpověď použitá v případě, že při vytváření došlo k chybě."
        body:
          application/json:
            type: "ValidationError"
/interpreters/{interpreter_id}:
  uriParameters:
    interpreter_id:
      type: "string"
  get:
    description: "Slouží k získání detailu interpreta."
    responses:
      200:
        description: "Odpověď vrácená v případě nalezení interpreta."
        body:
          application/json:
            type: "Interpreter"
      404:
        description: "Odpověď použitá v případě, že autor nebyl nalezen."
        body:
          application/json:
            type: "ClientError"
  put:
    description: "Slouží k úpravě informací o interpretovi."
    body:
      application/json:
        type: "interpreters representation"
    responses:
      200:
        body:
          application/json:
            type: "Interpreter"
      400:
        body:
          application/json:
            type: "RequestError"
      404:
        description: "V případě nenalezeného interpreta."
        body:
          application/json:
            type: "ClientError"
      422:
        description: "Odpověď použitá v případě, že při vytváření došlo k chybě."
        body:
          application/json:
            type: "ValidationError"
  delete:
    description: "Slouží ke smazání interpreta."
    responses:
      204:
        description: "Použije se v případě, že došlo ke smazání."
      404:
        body:
          application/json:
            type: "ClientError"
/songbooks:
  get:
    description: "Slouží k získání seznamu zpěvníků. Součástí seznamu by měli\n bý\
      t jak zpěvníky veřejné, tak ty, ke kterým má uživatel\n přidělený přístup."
    queryParameters:
      query:
        type: "string"
        description: "Text použitý k vyhledávání mezi zpěvníky."
        required: false
      page:
        type: "integer"
        format: "int32"
        description: "Stránka výpisu."
        default: 0
        minimum: 0
        required: false
      per_page:
        type: "integer"
        format: "int32"
        description: "Upravuje počet zpěvníků na stránce."
        default: 30
        minimum: 1
        maximum: 200
        required: false
    responses:
      200:
        description: "Odpověď použitá v případě nalezení 0+ zpěvníků."
        headers:
          Link:
            type: "string"
            example: "</songbooks/?page=0&per_page=30>; rel=\"first\""
        body:
          application/json:
            type: "array"
            items:
              type: "Songbook"
      400:
        description: "Odpověď použitá v případě, že některý z parametrů obsahuje neplatná\
          \ data."
        body:
          application/json:
            type: "ClientError"
  post:
    description: "Slouží k založení nového zpěvníku."
    body:
      application/json:
        type: "songbooks representation"
    responses:
      201:
        body:
          application/json:
            type: "Redirect"
      400:
        body:
          application/json:
            type: "RequestError"
      422:
        description: "Odpověď použitá v případě, že při vytváření došlo k chybě."
        body:
          application/json:
            type: "ValidationError"
/songbooks/{songbook_id}:
  uriParameters:
    songbook_id:
      type: "string"
  get:
    description: "Slouží k získání detailů zpěvníků."
    headers:
      Accept:
        type: "string"
        description: "Je-li hlavička Accept explicitně nastavena na `application/pdf`,\
          \ vrátí json s endpointem na vygenerovaný soubor a obsahující log překladu.\
          \ V opačném případě je vrácen detail písně standardně v `json`u."
        default: "application/json"
        enum:
        - "application/json"
        - "application/pdf"
    responses:
      200:
        description: "Odpověď vrácená v případě nalezení zpěvníku."
        body:
          application/json:
            type: "Songbook"
          application/pdf:
            type: "object"
            description: "Odpověď v případě generovaného pdf"
            example:
              value: "{\"link\": \"/download/2b573863-71b1-4463-96a7-e7fae9ba3865.pdf\"\
                , \"log\": {\n     \"Madness\": [1] WARNING: Unknown tag [X].\",\n\
                \     \"Panic Station\": [3] WARNING: Unknown tag [chors].\"}\n}"
              strict: false
      404:
        description: "Odpověď použitá v případě, že zpěvník nebyl nalezen."
        body:
          application/json:
            type: "ClientError"
          application/pdf:
            type: "ClientError"
      500:
        description: "Odpověď v případě chyby kompilace zpěvníku na pdf."
        body:
          application/json:
            type: "ClientError"
          application/pdf:
            type: "ClientError"
  put:
    description: "Slouží k úpravě zpěvníku."
    body:
      application/json:
        type: "songbooks representation"
    responses:
      200:
        body:
          application/json:
            type: "Songbook"
      400:
        body:
          application/json:
            type: "RequestError"
      404:
        description: "V případě nenalezeného zpěvníku"
        body:
          application/json:
            type: "ClientError"
      422:
        description: "Odpověď použitá v případě, že při vytváření došlo k chybě."
        body:
          application/json:
            type: "ValidationError"
  delete:
    description: "Slouží ke smazání zpěvníku."
    responses:
      204:
        description: "Použije se v případě, že došlo ke smazání."
      404:
        body:
          application/json:
            type: "ClientError"
/songbooks/{songbook_id}/songs:
  uriParameters:
    songbook_id:
      type: "string"
  put:
    description: "Slouží k přidání více písní do zpěvníku."
    body:
      application/json:
        type: "array"
        items:
          type: "songbook song representation"
    responses:
      200:
        body:
          application/json:
            type: "Response"
      404:
        body:
          application/json:
            type: "ClientError"
      422:
        body:
          application/json:
            type: "ValidationError"
/songbooks/{songbook_id}/song/{song_id}:
  uriParameters:
    songbook_id:
      type: "string"
    song_id:
      type: "string"
  put:
    description: "Slouží k přidání písně do zpěvníku."
    body:
      application/json:
        type: "songbook song representation"
    responses:
      200:
        body:
          application/json:
            type: "Response"
      404:
        body:
          application/json:
            type: "ClientError"
      422:
        body:
          application/json:
            type: "ValidationError"
  delete:
    description: "Slouží k odstranění písně ze zpěvníku."
    responses:
      204:
        description: "Použije se v případě, že došlo ke smazání."
      404:
        body:
          application/json:
            type: "ClientError"
/user:
  get:
    description: "Vrátí informace o aktivním uživateli"
    responses:
      200:
        body:
          application/json:
            type: "User"
/users/{user_id}:
  uriParameters:
    user_id:
      type: "string"
  get:
    description: "Vrátí informace o daném uživateli"
    responses:
      200:
        body:
          application/json:
            type: "string"
            description: "Vrací pouze jméno daného uživatele."
      422:
        body:
          application/json:
            type: "ValidationError"
/users/songbook/{songbook_id}:
  uriParameters:
    songbook_id:
      type: "string"
  put:
    description: "Slouží k nastavení hlavního zpěvníku"
    responses:
      200:
        body:
          application/json:
            type: "Response"
      400:
        body:
          application/json:
            type: "RequestError"
      404:
        body:
          application/json:
            type: "ClientError"
      422:
        body:
          application/json:
            type: "ValidationError"
