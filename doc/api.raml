#%RAML 0.8
title: Skautský zpěvník
version: v0.1
baseUri: "https://zpevnik.skauting.cz/api/"
schemas: 
    - 
        ClientError: '{"type":"object","$schema":"http://json-schema.org/draft-03/schema#","title":"ClientError","properties":{"message":{"type":"string","required":true,"title":"message"}}}'
    - 
        ValidationError: '{"type":"object","$schema":"http://json-schema.org/draft-03/schema#","title":"ValidationError","properties":{"message":{"type":"string","required":true,"title":"message"},"errors":{"type":"array","required":true,"title":"errors","items":{"type":"object","properties":{"field":{"type":"string","required":true,"title":"field"},"code":{"type":"string","required":true,"title":"code"},"message":{"type":"string","required":true,"title":"message"}}},"uniqueItems":false}}}'
    - 
        Redirect: '{"type":"object","$schema":"http://json-schema.org/draft-03/schema#","title":"Redirect","properties":{"link":{"type":"string","required":true,"title":"link"}}}'
    - 
        Author: '{"type":"object","$schema":"http://json-schema.org/draft-03/schema#","title":"Author","properties":{"id":{"type":"string","required":true,"title":"id"},"firstname":{"type":"string","required":true,"title":"firstname"},"surname":{"type":"string","required":true,"title":"surname"}}}'
    - 
        Song: '{"type":"object","$schema":"http://json-schema.org/draft-03/schema#","title":"Song","properties":{"id":{"type":"string","required":true,"title":"id"},"title":{"type":"string","required":true,"title":"title"},"authors":{"type":"array","required":true,"title":"authors","items":{"type":"string","title":"authors"},"uniqueItems":false},"variants":{"type":"array","required":true,"title":"variants","items":{"type":"string","title":"variants"},"uniqueItems":false}}}'
    - 
        Songbook: '{"type":"object","$schema":"http://json-schema.org/draft-03/schema#","title":"Songbook","properties":{"id":{"type":"string","required":true,"title":"id"},"title":{"type":"string","required":true,"title":"title"}}}'
    - 
        Variant: '{"type":"object","$schema":"http://json-schema.org/draft-03/schema#","title":"Variant","properties":{"id":{"type":"string","required":true,"title":"id"},"title":{"type":"string","required":false,"title":"title"},"song":{"type":"string","required":true,"title":"song"},"chords":{"type":"string","required":true,"title":"chords"}}}'
    - 
        anonymousRepresentation: '{"type":"object","$schema":"http://json-schema.org/draft-03/schema#","title":"anonymousRepresentation","properties":{"title":{"type":"string","required":true,"title":"title"}}}'
    - 
        anonymousRepresentation2: '{"type":"object","$schema":"http://json-schema.org/draft-03/schema#","title":"anonymousRepresentation2","properties":{"title":{"type":"string","required":true,"title":"title"}}}'
    - 
        anonymousRepresentation3: '{"type":"object","$schema":"http://json-schema.org/draft-03/schema#","title":"anonymousRepresentation3","properties":{"title":{"type":"string","required":false,"title":"title"},"chords":{"type":"string","required":true,"title":"chords"}}}'
    - 
        anonymousRepresentation4: '{"type":"object","$schema":"http://json-schema.org/draft-03/schema#","title":"anonymousRepresentation4","properties":{"variant":{"type":"string","required":true,"title":"variant"}}}'
    - 
        anonymousRepresentation5: '{"type":"object","$schema":"http://json-schema.org/draft-03/schema#","title":"anonymousRepresentation5","properties":{"firstname":{"type":"string","required":true,"title":"firstname"},"surname":{"type":"string","required":true,"title":"surname"}}}'
    - 
        anonymousRepresentation6: '{"type":"object","$schema":"http://json-schema.org/draft-03/schema#","title":"anonymousRepresentation6","properties":{"firstname":{"type":"string","required":true,"title":"firstname"},"surname":{"type":"string","required":true,"title":"surname"}}}'
    - 
        anonymousRepresentation7: '{"type":"object","$schema":"http://json-schema.org/draft-03/schema#","title":"anonymousRepresentation7","properties":{"message":{"type":"string","required":true,"title":"message"}}}'
    - 
        anonymousRepresentation8: '{"type":"object","$schema":"http://json-schema.org/draft-03/schema#","title":"anonymousRepresentation8","properties":{"title":{"type":"string","required":true,"title":"title"}}}'
    - 
        anonymousRepresentation9: '{"type":"object","$schema":"http://json-schema.org/draft-03/schema#","title":"anonymousRepresentation9","properties":{"title":{"type":"string","required":true,"title":"title"}}}'
    - 
        anonymousRepresentation10: '{"type":"object","$schema":"http://json-schema.org/draft-03/schema#","title":"anonymousRepresentation10","properties":{"message":{"type":"string","required":true,"title":"message"}}}'
/songs/: 
    get: 
        description: Slouží k získávání seznamu písní.
        queryParameters: 
            query: 
                displayName: query
                description: Text použitý k vyhledávání mezi písněmi.
                type: string
                required: false
                repeat: false
            page: 
                displayName: page
                description: Stránka výpisu.
                type: integer
                required: false
                repeat: false
                default: "0"
            per_page: 
                displayName: per_page
                description: Upravuje počet písní na stránce.
                type: integer
                required: false
                repeat: false
                default: "30"
        responses: 
            "200": 
                description: Odpověď použitá v případě nalezení 0+ písní.
                body: 
                    application/json: 
                        schema: Song
                        example: '[{"id":"sample id","title":"sample title","authors":["sample authors"],"variants":["sample variants"]}]'
                headers: 
                    Link: 
                        displayName: Link
                        type: string
                        required: true
                        repeat: false
                        example: '</songs/?page=0&per_page=30>; rel="first"'
            "400": 
                description: Odpověď použitá v případě, že některý z parametrů obsahuje neplatná data.
                body: 
                    application/json: 
                        schema: ClientError
                        example: '{"message":"sample message"}'
    post: 
        description: Slouží k vytváření nových písní.
        body: 
            application/json: 
                schema: anonymousRepresentation
                example: '{"title":"sample title"}'
        responses: 
            "201": 
                description: Odpověď použitá v případě úspěšného vytvoření písně.
                body: 
                    application/json: 
                        schema: Redirect
                        example: '{"link":"sample link"}'
                headers: 
                    Location: 
                        displayName: Location
                        type: string
                        required: true
                        repeat: false
                        example: /songs/1/
            "422": 
                description: Odpověď použitá v případě, že při vytváření došlo k chybě.
                body: 
                    application/json: 
                        schema: ValidationError
                        example: '{"message":"sample message","errors":{"field":"sample field","code":"sample code","message":"sample message"}}'
/songs/{song_id}/: 
    uriParameters: 
        song_id: 
            displayName: song_id
            type: string
            required: false
            repeat: false
    get: 
        description: Slouží k získání detailu písně.
        responses: 
            "200": 
                description: Odpověď vrácená v případě nalezení písně.
                body: 
                    application/json: 
                        schema: Song
                        example: '{"id":"sample id","title":"sample title","authors":["sample authors"],"variants":["sample variants"]}'
            "404": 
                description: Odpověď použitá v případě, že píseň nebyla nalezena.
                body: 
                    application/json: 
                        schema: ClientError
                        example: '{"message":"sample message"}'
    put: 
        description: Slouží k úpravě detailů písně.
        body: 
            application/json: 
                schema: anonymousRepresentation2
                example: '{"title":"sample title"}'
        responses: 
            "200": 
                description: Odpověď vrácená v případě úspěšného uložení písně
                body: 
                    application/json: 
                        schema: Song
                        example: '{"id":"sample id","title":"sample title","authors":["sample authors"],"variants":["sample variants"]}'
            "404": 
                description: Odpověď použitá v případě, že píseň nebyla nalezena.
                body: 
                    application/json: 
                        schema: ClientError
                        example: '{"message":"sample message"}'
            "422": 
                description: Odpověď použitá v případě, že při vytváření došlo k chybě.
                body: 
                    application/json: 
                        schema: ValidationError
                        example: '{"message":"sample message","errors":{"field":"sample field","code":"sample code","message":"sample message"}}'
    delete: 
        description: |
            Slouží ke smazání jedné konkrétní písně
            včetně všech variant akordů.
        responses: 
            "204": 
                description: Použije se v případě, že došlo ke smazání.
            "404": 
                body: 
                    application/json: 
                        schema: ClientError
                        example: '{"message":"sample message"}'
/songs/{song_id}/variants/: 
    uriParameters: 
        song_id: 
            displayName: song_id
            type: string
            required: false
            repeat: false
    get: 
        description: |
            Slouží k získání seznamu všech variant akordů jedné
            konkrétní písně.
        responses: 
            "200": 
                body: 
                    application/json: 
                        schema: Variant
                        example: '[{"id":"sample id","title":"sample title","song":"sample song","chords":"sample chords"}]'
            "404": 
                description: Odpověď použitá v případě, že píseň nebyla nalezena.
                body: 
                    application/json: 
                        schema: ClientError
                        example: '{"message":"sample message"}'
    post: 
        description: Slouží k vytvoření nové varianty akordů písně.
        body: 
            application/json: 
                schema: anonymousRepresentation3
                example: '{"title":"sample title","chords":"sample chords"}'
        responses: 
            "201": 
                body: 
                    application/json: 
                        schema: Redirect
                        example: '{"link":"sample link"}'
                headers: 
                    Location: 
                        displayName: Location
                        type: string
                        required: true
                        repeat: false
                        example: /songs/1/variants/1/
            "404": 
                description: Odpověď použitá v případě, že píseň nebyla nalezena.
                body: 
                    application/json: 
                        schema: ClientError
                        example: '{"message":"sample message"}'
            "422": 
                description: Odpověď použitá v případě, že při vytváření došlo k chybě.
                body: 
                    application/json: 
                        schema: ValidationError
                        example: '{"message":"sample message","errors":{"field":"sample field","code":"sample code","message":"sample message"}}'
/songs/{song_id}/variants/{variant_id}/: 
    uriParameters: 
        song_id: 
            displayName: song_id
            type: string
            required: false
            repeat: false
        variant_id: 
            displayName: variant_id
            type: string
            required: false
            repeat: false
    get: 
        description: Slouží k získání detailů varianty písně.
        headers: 
            Accept: 
                displayName: Accept
                description: |
                    Je-li hlavička Accept explicitně nastavena na `application/pdf`,
                    vrátí endpoint vygenerovaný soubor. V opačném případě
                    je vrácen detail písně standardně v `json`u.
                type: string
                required: true
                repeat: false
                enum: [application/json, application/pdf]
                default: application/json
        responses: 
            "200": 
                description: Odpověď vrácená v případě nalezení varianty písně.
                body: 
                    application/json: 
                        schema: Variant
                        example: '{"id":"sample id","title":"sample title","song":"sample song","chords":"sample chords"}'
                    application/pdf: 
                        schema: Variant
            "404": 
                description: Odpověď použitá v případě, že píseň nebo její varianta nebyla nalezena.
                body: 
                    application/json: 
                        schema: ClientError
                        example: '{"message":"sample message"}'
                    application/pdf: 
                        schema: ClientError
            "500": 
                description: Odpověď v případě chyby kompilace zpěvníku na pdf.
                body: 
                    application/json: 
                        schema: ClientError
                        example: '{"message":"sample message"}'
                    application/pdf: 
                        schema: ClientError
    put: 
        description: Slouží k úpravě varianty písně.
        body: 
            application/json: 
                schema: anonymousRepresentation4
                example: '{"variant":"sample variant"}'
        responses: 
            "200": 
                body: 
                    application/json: 
                        schema: Variant
                        example: '{"id":"sample id","title":"sample title","song":"sample song","chords":"sample chords"}'
            "404": 
                description: Odpověď použitá v případě, že varianta nebo píseň nebyla nalezena.
                body: 
                    application/json: 
                        schema: ClientError
                        example: '{"message":"sample message"}'
            "422": 
                description: Odpověď použitá v případě, že při vytváření došlo k chybě.
                body: 
                    application/json: 
                        schema: ValidationError
                        example: '{"message":"sample message","errors":{"field":"sample field","code":"sample code","message":"sample message"}}'
    delete: 
        description: Slouží ke smazání varianty písně.
        responses: 
            "204": 
                description: Použije se v případě, že došlo ke smazání.
            "404": 
                body: 
                    application/json: 
                        schema: ClientError
                        example: '{"message":"sample message"}'
/authors/: 
    get: 
        description: Slouží k získání seznamu autorů.
        queryParameters: 
            query: 
                displayName: query
                description: Text použitý k vyhledávání mezi autory.
                type: string
                required: false
                repeat: false
            page: 
                displayName: page
                description: Stránka výpisu.
                type: integer
                required: false
                repeat: false
                default: "0"
            per_page: 
                displayName: per_page
                description: Upravuje počet autorů na stránce.
                type: integer
                required: false
                repeat: false
                default: "30"
        responses: 
            "200": 
                description: Odpověď použitá v případě nalezení 0+ autorů.
                body: 
                    application/json: 
                        schema: Author
                        example: '[{"id":"sample id","firstname":"sample firstname","surname":"sample surname"}]'
                headers: 
                    Link: 
                        displayName: Link
                        type: string
                        required: true
                        repeat: false
                        example: '</authors/?page=0&per_page=30>; rel="first"'
            "400": 
                description: Odpověď použitá v případě, že některý z parametrů obsahuje neplatná data.
                body: 
                    application/json: 
                        schema: ClientError
                        example: '{"message":"sample message"}'
    post: 
        description: Slouží k vytváření autorů.
        body: 
            application/json: 
                schema: anonymousRepresentation5
                example: '{"firstname":"sample firstname","surname":"sample surname"}'
        responses: 
            "201": 
                description: Odpověď použitá v případě úspěšného vytvoření písně.
                body: 
                    application/json: 
                        schema: Redirect
                        example: '{"link":"sample link"}'
                headers: 
                    Location: 
                        displayName: Location
                        type: string
                        required: true
                        repeat: false
                        example: /authors/1/
            "422": 
                description: Odpověď použitá v případě, že při vytváření došlo k chybě.
                body: 
                    application/json: 
                        schema: ValidationError
                        example: '{"message":"sample message","errors":{"field":"sample field","code":"sample code","message":"sample message"}}'
/authors/{author_id}/: 
    uriParameters: 
        author_id: 
            displayName: author_id
            type: string
            required: false
            repeat: false
    get: 
        description: Slouží k získání detailu autora.
        responses: 
            "200": 
                description: Odpověď vrácená v případě nalezení autora.
                body: 
                    application/json: 
                        schema: Author
                        example: '{"id":"sample id","firstname":"sample firstname","surname":"sample surname"}'
            "404": 
                description: Odpověď použitá v případě, že autor nebyl nalezen.
                body: 
                    application/json: 
                        schema: ClientError
                        example: '{"message":"sample message"}'
    put: 
        description: Slouží k úpravě informací o autorovi.
        body: 
            application/json: 
                schema: anonymousRepresentation6
                example: '{"firstname":"sample firstname","surname":"sample surname"}'
        responses: 
            "200": 
                body: 
                    application/json: 
                        schema: Author
                        example: '{"id":"sample id","firstname":"sample firstname","surname":"sample surname"}'
            "404": 
                description: V případě nenalezeného autora.
                body: 
                    application/json: 
                        schema: ClientError
                        example: '{"message":"sample message"}'
            "422": 
                description: Odpověď použitá v případě, že při vytváření došlo k chybě.
                body: 
                    application/json: 
                        schema: ValidationError
                        example: '{"message":"sample message","errors":{"field":"sample field","code":"sample code","message":"sample message"}}'
    delete: 
        description: Slouží ke smazání autora.
        responses: 
            "204": 
                description: Použije se v případě, že došlo ke smazání.
            "404": 
                body: 
                    application/json: 
                        schema: ClientError
                        example: '{"message":"sample message"}'
/songs/{song_id}/authors/: 
    uriParameters: 
        song_id: 
            displayName: song_id
            type: string
            required: false
            repeat: false
    get: 
        description: Slouží k získání seznamu autorů písně.
        responses: 
            "200": 
                body: 
                    application/json: 
                        schema: Author
                        example: '[{"id":"sample id","firstname":"sample firstname","surname":"sample surname"}]'
            "404": 
                body: 
                    application/json: 
                        schema: ClientError
                        example: '{"message":"sample message"}'
/songs/{song_id}/authors/{author_id}: 
    uriParameters: 
        song_id: 
            displayName: song_id
            type: string
            required: false
            repeat: false
        author_id: 
            displayName: author_id
            type: string
            required: false
            repeat: false
    post: 
        description: Slouží k přiřazení autora k písni.
        responses: 
            "200": 
                body: 
                    application/json: 
                        schema: anonymousRepresentation7
                        example: '{"message":"sample message"}'
            "404": 
                body: 
                    application/json: 
                        schema: ClientError
                        example: '{"message":"sample message"}'
    delete: 
        description: Slouží k odstranění autora ze seznamu autorů konkrétní písně.
        responses: 
            "204": 
                description: Použije se v případě, že došlo ke smazání.
            "404": 
                body: 
                    application/json: 
                        schema: ClientError
                        example: '{"message":"sample message"}'
/songbooks/: 
    get: 
        description: |
            Slouží k získání seznamu zpěvníků. Součástí seznamu by měli
             být jak zpěvníky veřejné, tak ty, ke kterým má uživatel
             přidělený přístup.
        queryParameters: 
            query: 
                displayName: query
                description: Text použitý k vyhledávání mezi zpěvníky.
                type: string
                required: false
                repeat: false
            page: 
                displayName: page
                description: Stránka výpisu.
                type: integer
                required: false
                repeat: false
                default: "0"
            per_page: 
                displayName: per_page
                description: Upravuje počet zpěvníků na stránce.
                type: integer
                required: false
                repeat: false
                default: "30"
        responses: 
            "200": 
                description: Odpověď použitá v případě nalezení 0+ zpěvníků.
                body: 
                    application/json: 
                        schema: Songbook
                        example: '[{"id":"sample id","title":"sample title"}]'
                headers: 
                    Link: 
                        displayName: Link
                        type: string
                        required: true
                        repeat: false
                        example: '</songbooks/?page=0&per_page=30>; rel="first"'
            "400": 
                description: Odpověď použitá v případě, že některý z parametrů obsahuje neplatná data.
                body: 
                    application/json: 
                        schema: ClientError
                        example: '{"message":"sample message"}'
    post: 
        description: Slouží k založení nového zpěvníku.
        body: 
            application/json: 
                schema: anonymousRepresentation8
                example: '{"title":"sample title"}'
        responses: 
            "201": 
                body: 
                    application/json: 
                        schema: Redirect
                        example: '{"link":"sample link"}'
/songbooks/{songbook_id}/: 
    uriParameters: 
        songbook_id: 
            displayName: songbook_id
            type: string
            required: false
            repeat: false
    get: 
        description: Slouží k získání detailů zpěvníků.
        headers: 
            Accept: 
                displayName: Accept
                description: |
                    |
                      Je-li hlavička Accept explicitně nastavena na `application/pdf`,
                      vrátí endpoint vygenerovaný soubor. V opačném případě
                      je vrácen detail písně standardně v `json`u.
                type: string
                required: true
                repeat: false
                enum: [application/json, application/pdf]
                default: application/json
        responses: 
            "200": 
                description: Odpověď vrácená v případě nalezení zpěvníku.
                body: 
                    application/json: 
                        schema: Songbook
                        example: '{"id":"sample id","title":"sample title"}'
                    application/pdf: 
                        schema: Songbook
            "404": 
                description: Odpověď použitá v případě, že zpěvník nebyl nalezen.
                body: 
                    application/json: 
                        schema: ClientError
                        example: '{"message":"sample message"}'
                    application/pdf: 
                        schema: ClientError
            "500": 
                description: Odpověď v případě chyby kompilace zpěvníku na pdf.
                body: 
                    application/json: 
                        schema: ClientError
                        example: '{"message":"sample message"}'
                    application/pdf: 
                        schema: ClientError
    put: 
        description: Slouží k úpravě zpěvníku.
        body: 
            application/json: 
                schema: anonymousRepresentation9
                example: '{"title":"sample title"}'
        responses: 
            "200": 
                body: 
                    application/json: 
                        schema: Songbook
                        example: '{"id":"sample id","title":"sample title"}'
            "404": 
                description: V případě nenalezeného zpěvníku
                body: 
                    application/json: 
                        schema: ClientError
                        example: '{"message":"sample message"}'
            "422": 
                description: Odpověď použitá v případě, že při vytváření došlo k chybě.
                body: 
                    application/json: 
                        schema: ValidationError
                        example: '{"message":"sample message","errors":{"field":"sample field","code":"sample code","message":"sample message"}}'
    delete: 
        description: Slouží ke smazání zpěvníku.
        responses: 
            "204": 
                description: Použije se v případě, že došlo ke smazání.
            "404": 
                body: 
                    application/json: 
                        schema: ClientError
                        example: '{"message":"sample message"}'
/songbooks/{songbook_id}/song/{song_id}/variants/{variant_id}/: 
    uriParameters: 
        songbook_id: 
            displayName: songbook_id
            type: string
            required: false
            repeat: false
        song_id: 
            displayName: song_id
            type: string
            required: false
            repeat: false
        variant_id: 
            displayName: variant_id
            type: string
            required: false
            repeat: false
    post: 
        description: Slouží k přidání písně do zpěvníku.
        responses: 
            "200": 
                body: 
                    application/json: 
                        schema: anonymousRepresentation10
                        example: '{"message":"sample message"}'
            "404": 
                body: 
                    application/json: 
                        schema: ClientError
                        example: '{"message":"sample message"}'
    delete: 
        description: Slouží k odstranění písně ze zpěvníku.
        responses: 
            "204": 
                description: Použije se v případě, že došlo ke smazání.
            "404": 
                body: 
                    application/json: 
                        schema: ClientError
                        example: '{"message":"sample message"}'
